{
  "_args": [
    [
      {
        "raw": "response-spy@~0.0.x",
        "scope": null,
        "escapedName": "response-spy",
        "name": "response-spy",
        "rawSpec": "~0.0.x",
        "spec": ">=0.0.0 <0.1.0",
        "type": "range"
      },
      "/home/hristov/Documents/uniWorkspace/DBS/homework2/exercise3/node_modules/inject-html"
    ]
  ],
  "_from": "response-spy@>=0.0.0 <0.1.0",
  "_id": "response-spy@0.0.4",
  "_inCache": true,
  "_location": "/response-spy",
  "_nodeVersion": "0.10.38",
  "_npmUser": {
    "name": "alessioalex",
    "email": "alexandru.vladutu@gmail.com"
  },
  "_npmVersion": "2.12.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "response-spy@~0.0.x",
    "scope": null,
    "escapedName": "response-spy",
    "name": "response-spy",
    "rawSpec": "~0.0.x",
    "spec": ">=0.0.0 <0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/inject-html"
  ],
  "_resolved": "https://registry.npmjs.org/response-spy/-/response-spy-0.0.4.tgz",
  "_shasum": "bde0aed90a815f04edf2059fd21f2c7f982db63a",
  "_shrinkwrap": null,
  "_spec": "response-spy@~0.0.x",
  "_where": "/home/hristov/Documents/uniWorkspace/DBS/homework2/exercise3/node_modules/inject-html",
  "author": {
    "name": "Alexandru Vladutu",
    "email": "alexandru.vladutu@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/alessioalex/response-spy/issues"
  },
  "dependencies": {
    "is-stream-ended": "^0.1.0",
    "sliced": "0.0.5"
  },
  "description": "Intercepts HTTP response headers && body (without any man-in-the-middle http proxy server)",
  "devDependencies": {
    "eslint": "^0.23.0",
    "express": "~3.4.8",
    "fills": "0.0.1",
    "husky": "^0.8.1",
    "mocha": "~1.17.0",
    "once": "~1.3.0",
    "request": "~2.33.0",
    "should": "~3.0.1",
    "waits": "~0.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "bde0aed90a815f04edf2059fd21f2c7f982db63a",
    "tarball": "https://registry.npmjs.org/response-spy/-/response-spy-0.0.4.tgz"
  },
  "gitHead": "ca8c400e9e58c54bc73e46f17e3f025b1a981a92",
  "homepage": "https://github.com/alessioalex/response-spy#readme",
  "keywords": [
    "cache",
    "static",
    "response",
    "res"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "alessioalex",
      "email": "alexandru.vladutu@gmail.com"
    }
  ],
  "name": "response-spy",
  "optionalDependencies": {},
  "readme": "     _ __ ___  ___ _ __   ___  _ __  ___  ___        ___ _ __  _   _ \n    | '__/ _ \\/ __| '_ \\ / _ \\| '_ \\/ __|/ _ \\      / __| '_ \\| | | |\n    | | |  __/\\__ \\ |_) | (_) | | | \\__ \\  __/      \\__ \\ |_) | |_| |\n    |_|  \\___||___/ .__/ \\___/|_| |_|___/\\___|      |___/ .__/ \\__, |\n                  | |                                   | |     __/ |\n                  |_|                                   |_|    |___/ \n\nNode module for intercepting HTTP responses sent in your apps.\n\n## Example\n\n```js\nvar http = require('http');\nvar intercept = require('response-spy');\n\nhttp.createServer(function(req, res) {\n  // returns a readable stream with the response output as the data\n  var stream = intercept(res);\n\n  // You can also see the headers sent, uncomment below\n  /*\n  stream.on('headers', function(headers, statusCode) {\n    // headers === Array || null (implicit headers)\n    console.log('url: %s, headers: ', req.url, headers);\n  });\n  */\n\n  stream.pipe(process.stdout);\n\n  if (req.url === '/') {\n    res.setHeader('X-Powered-By', 'alessioalex');\n    res.writeHead(200, { 'Content-Type': 'text/html', 'X-Pid': 1239 });\n    res.end('Hello world\\n');\n  } else if (req.url === '/pipe') {\n    require('fs').createReadStream(__filename).pipe(res);\n  } else if (req.url === '/implicit-headers') {\n    res.end('go\\n');\n  } else {\n    res.writeHead(404, { 'Connection': 'closed', 'Content-Type': 'text/html' });\n    res.end('Page Not Found\\n');\n  }\n}).listen(5000);\nconsole.log('Ok good, now visit http://localhost:5000/ && http://localhost:5000/pipe');\nconsole.log('.. and then check your terminal');\n```\n\n## How does it work?\n\nIt overrides the `OutgoingMessage` native functions (`write`, `writeHead`, `end`, `setHeader`, `removeHeader`), without affecting your apps (the original functions will be called with the same params, these are just thin wrappers).\nWith `response-spy` you practically get a `ReadableStream` from your `response` object.\n\n## Use cases\n\n- generating cache\n- traffic analysis\n- etc\n\n## License MIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alessioalex/response-spy.git"
  },
  "scripts": {
    "lint": "eslint index.js example.js lib/*.js",
    "precommit": "npm run lint && npm test",
    "test": "mocha --reporter spec test/unit && node test/functional/test.js"
  },
  "version": "0.0.4"
}
